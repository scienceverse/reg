{
    "name": "Kinship and Prosocial Behaviour",
    "info": {
        "abstract": "A reanalysis of data from DeBruine (2002) Facial Resemblance Enhances Trust, PRSLB."
    },
    "authors": [
        {
            "orcid": "0000-0002-7523-5539",
            "name": {
                "surname": "DeBruine",
                "given": "Lisa M."
            },
            "roles": [
                "Conceptualization",
                "Data curation",
                "Software",
                "Writing - original draft",
                "Writing - review & editing"
            ],
            "email": "lisa.debruine@glasgow.ac.uk"
        },
        {
            "orcid": "0000-0002-0247-239X",
            "name": {
                "surname": "Lakens",
                "given": "DaniÃ«l"
            },
            "roles": [
                "Conceptualization",
                "Formal analysis",
                "Writing - original draft",
                "Writing - review & editing"
            ]
        }
    ],
    "hypotheses": [
        {
            "id": "self_pref",
            "description": "Cues of kinship will increase prosocial behaviour. Cues of kinship will be manipulated by morphed facial self-resemblance. Prosocial behaviour will be measured by responses in the trust game. The prediction is that the number of trusting AND/OR reciprocating moves will be greater to self morphs than to other morphs.",
            "criteria": [
                {
                    "id": "t_lo",
                    "analysis_id": "trust",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": true
                },
                {
                    "id": "t_hi",
                    "analysis_id": "trust",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "r_lo",
                    "analysis_id": "recip",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "r_hi",
                    "analysis_id": "recip",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "ts_norm",
                    "analysis_id": "norm",
                    "result": "ts",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "to_norm",
                    "analysis_id": "norm",
                    "result": "to",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "rs_norm",
                    "analysis_id": "norm",
                    "result": "rs",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "ro_norm",
                    "analysis_id": "norm",
                    "result": "ro",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "t_lo_w",
                    "analysis_id": "trust_wilcox",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "t_hi_w",
                    "analysis_id": "trust_wilcox",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "r_lo_w",
                    "analysis_id": "recip_wilcox",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "r_hi_w",
                    "analysis_id": "recip_wilcox",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                }
            ],
            "corroboration": {
                "description": "The hypothesis is corroborated if the 97.5% CI lower bound is greater than 0 and the 97.5% CI upper bound is greater than 0.2 (the SESOI) for either the trust or reciprocation moves. Use t.test if the data are normally distributed, or Wilcox test otherwise.",
                "evaluation": "(ts_norm & to_norm & t_lo & t_hi) | \n                   (!(ts_norm & to_norm) & t_lo_w & t_hi_w) | \n                   (rs_norm & ro_norm & r_lo & r_hi) | \n                   (!(rs_norm & ro_norm) & r_lo_w & r_hi_w)",
                "result": false
            },
            "falsification": {
                "description": "The hypothesis is falsified if the 97.5% CI upper bound is smaller than 0.2 (the SESOI) for both trust and reciprocation. Use t.test if the data are normally distributed, or Wilcox test otherwise.",
                "evaluation": "( (ts_norm & to_norm & !t_hi) |\n                     (!(ts_norm & to_norm) & !t_hi_w) ) & \n                   ( (rs_norm & ro_norm & !r_hi) |\n                     (!(rs_norm & ro_norm) & !r_hi_w) )",
                "result": false
            },
            "power": {
                "corroboration": 0.54,
                "falsification": 0,
                "inconclusive": 0.46,
                "criteria": {
                    "t_lo": [-0.1449, -0.1623, -0.0267, -0.0125, 0.1325, -0.2593, -0.1355, 0.3105, 0.0637, -0.0706, 0.0315, 0.0217, 0.0944, 0.4072, 0.0636, 0.3736, 0.1456, 0.1544, -0.2326, 0.0239, 0.1295, 0.0476, -0.2804, 0.3312, -0.0812, -0.2257, -0.0254, 0.4171, 0.2526, -0.06, 0.0427, 0.3894, 0.0572, -0.0025, 0.1127, 0.2276, -0.2273, 0.0368, -0.1401, 0.0903, 0.315, 0.0775, 0.1911, 0.0747, -0.0002, 0.3773, -0.2947, 0.1864, -0.4156, -0.0306, -0.1495, -0.2599, 0.2511, 0.1264, 0.113, 0.0578, -0.096, -0.145, 0.3428, 0.1979, -0.2317, -0.1539, 0.1548, -0.1934, -0.0766, 0.0144, -0.2642, -0.0145, -0.0028, -0.0605, -0.0599, -0.0139, -0.2171, -0.0716, 0.0241, 0.1803, 0.1657, -0.0971, -0.1896, -0.1375, -0.0527, -0.1472, 0.1175, 0.1829, -0.0926, 0.1799, -0.0891, -0.2459, 0.081, 0.1106, 0.2832, 0.0616, 0.2678, 0.1326, 0.0406, 0.1798, 0.2071, -0.056, 0.0639, -0.1892],
                    "t_hi": [0.5529, 0.4862, 0.8516, 0.8958, 0.7107, 0.7566, 0.7445, 1.0045, 0.6527, 0.6253, 0.7984, 0.8701, 0.9128, 0.9407, 0.652, 1.0981, 0.956, 0.7482, 0.6144, 0.6935, 0.8549, 0.7258, 0.6677, 0.9171, 0.6798, 0.3871, 0.7215, 1.2296, 1.0177, 0.8006, 0.8127, 0.846, 0.8774, 0.7297, 0.8163, 0.838, 0.5371, 0.7451, 0.8512, 0.9299, 1.1031, 0.7642, 0.9633, 1.1392, 0.8559, 1.0861, 0.5418, 1.0084, 0.466, 0.6526, 0.4587, 0.4528, 1.1313, 0.979, 0.8976, 0.8073, 0.6151, 0.6929, 1.1089, 0.8982, 0.4741, 0.6591, 0.8917, 0.642, 0.7022, 0.6161, 0.6111, 0.598, 0.8967, 0.7551, 0.6038, 0.6512, 0.69, 0.8628, 0.7487, 0.9128, 0.8441, 0.5626, 0.4949, 0.7196, 0.8125, 0.6176, 1.0376, 0.7375, 0.7823, 0.8879, 0.5197, 0.4805, 0.7214, 0.8928, 0.9905, 0.8099, 0.8986, 0.7899, 0.7185, 0.814, 1.04, 0.7453, 0.8768, 0.6199],
                    "r_lo": [-0.2249, -0.1633, -0.2676, -0.5766, -0.6109, -0.3835, -0.5281, -0.213, -0.0488, -0.2249, -0.5502, -0.2989, -0.4757, -0.3081, -0.2889, -0.5844, -0.2175, 0.0338, -0.3804, -0.4558, -0.0583, -0.5501, -0.3531, -0.4405, -0.7478, -0.3981, -0.5317, -0.4615, -0.6379, -0.2239, -0.2794, -0.7765, -0.2681, -0.4869, -0.6982, -0.1392, -0.2782, -0.2985, -0.5919, -0.7142, -0.2166, -0.2252, -0.3201, -0.3042, -0.4008, -0.3648, -0.3, -0.7337, -0.5862, -0.3102, -0.5016, -0.3184, -0.1143, -0.2556, -0.4696, -0.2549, -0.3666, -0.576, -0.7327, -0.5914, -0.265, -0.3071, -0.4279, -0.6671, -0.3412, -0.4815, -0.2779, -0.4912, -0.488, -0.3641, -0.0924, -0.6559, -0.705, -0.5761, -0.2361, -0.0554, -0.3238, -0.2914, -0.0656, -0.468, -0.4545, -0.5201, -0.3674, -0.4362, -0.2016, -0.3335, -0.0002, -0.4447, -0.4506, -0.3286, -0.3735, -0.3817, -0.3219, -0.0736, -0.1402, -0.0246, -0.2862, -0.5721, -0.0635, -0.2194],
                    "r_hi": [0.4686, 0.6003, 0.2788, 0.0701, 0.1199, 0.4078, 0.215, 0.3602, 0.5305, 0.3948, 0.2371, 0.2729, 0.3131, 0.613, 0.5227, 0.2779, 0.4967, 0.6905, 0.322, 0.0928, 0.6356, 0.2188, 0.4335, 0.266, 0.1217, 0.4761, 0.299, 0.2207, 0.2041, 0.6256, 0.47, 0.1111, 0.4728, 0.3367, 0.1718, 0.6784, 0.6227, 0.4742, 0.1162, 0.1454, 0.7824, 0.6407, 0.2231, 0.4797, 0.3448, 0.3639, 0.4144, 0.0372, 0.2223, 0.611, 0.3515, 0.3863, 0.655, 0.5569, 0.3583, 0.5101, 0.2656, 0.3759, 0.0105, 0.1024, 0.535, 0.357, 0.4638, -0.0056, 0.2745, 0.3693, 0.2408, 0.3534, 0.2979, 0.2891, 0.8336, 0.2219, -0.0627, 0.2934, 0.6554, 0.7306, 0.4887, 0.3548, 0.8538, 0.299, 0.3746, 0.2421, 0.3995, 0.4652, 0.5059, 0.0927, 0.7909, 0.3824, 0.3203, 0.4783, 0.621, 0.3717, 0.4266, 0.6973, 0.6231, 0.5159, 0.5179, 0.2908, 0.6529, 0.4463],
                    "ts_norm": [0.9105, 0.0568, 0.0041, 0.344, 0.3957, 0.422, 0.6196, 0.7663, 0.9549, 0.1841, 0.1433, 0.6542, 0.9442, 0.5631, 0.4463, 0.6591, 0.4157, 0.6128, 0.1862, 0.5834, 0.0568, 0.1528, 0.3221, 0.7592, 0.7499, 0.9556, 0.779, 0.6022, 0.6634, 0.0592, 0.8269, 0.2888, 0.917, 0.661, 0.6164, 0.7949, 0.2374, 0.2861, 0.4078, 0.5321, 0.8451, 0.2111, 0.7643, 0.1926, 0.0702, 0.6378, 0.3437, 0.38, 0.5422, 0.3863, 0.8271, 0.1624, 0.2248, 0.7533, 0.3689, 0.1271, 0.9912, 0.9633, 0.4767, 0.3381, 0.4485, 0.1497, 0.2142, 0.9176, 0.6455, 0.4469, 0.9678, 0.8429, 0.1154, 0.0312, 0.3436, 0.9117, 0.6332, 0.3939, 0.1289, 0.9942, 0.6364, 0.9895, 0.1195, 0.3889, 0.7629, 0.1975, 0.9014, 0.5582, 0.1812, 0.472, 0.6214, 0.8538, 0.1909, 0.5723, 0.0224, 0.3334, 0.7977, 0.7038, 0.9698, 0.3037, 0.93, 0.7755, 0.0271, 0.974],
                    "to_norm": [0.3465, 0.6798, 0.3947, 0.4283, 0.2021, 0.4125, 0.2782, 0.4081, 0.974, 0.3003, 0.9819, 0.805, 0.3261, 0.2028, 0.5592, 0.5647, 0.8831, 0.3589, 0.1172, 0.7819, 0.6186, 0.3599, 0.7841, 0.315, 0.1399, 0.3068, 0.6138, 0.3969, 0.5699, 0.1804, 0.717, 0.6162, 0.4921, 0.0525, 0.9577, 0.0185, 0.6933, 0.7355, 0.2947, 0.4737, 0.9402, 0.2665, 0.6578, 0.3972, 0.3195, 0.2896, 0.1682, 0.7473, 0.7145, 0.5042, 0.9994, 0.9498, 0.3271, 0.3991, 0.3619, 0.7188, 0.9478, 0.7221, 0.9826, 0.8526, 0.1725, 0.1906, 0.2722, 0.9181, 0.9358, 0.2278, 0.4965, 0.3256, 0.1206, 0.5193, 0.7699, 0.0522, 0.4874, 0.2828, 0.493, 0.7144, 0.4976, 0.7593, 0.8101, 0.3049, 0.6338, 0.6439, 0.0205, 0.3919, 0.8848, 0.6748, 0.0102, 0.0961, 0.8048, 0.9804, 0.0939, 0.1622, 0.3617, 0.8572, 0.9476, 0.0975, 0.0678, 0.8273, 0.6726, 0.7556],
                    "rs_norm": [0.2469, 0.5375, 0.0056, 0.2175, 0.9721, 0.1108, 0.2846, 0.3414, 0.7949, 0.7565, 0.4156, 0.5335, 0.385, 0.13, 0.5388, 0.0216, 0.0774, 0.5701, 0.0916, 0.6293, 0.0176, 0.5439, 0.0927, 0.6814, 0.8025, 0.2504, 0.4764, 0.7394, 0.3866, 0.1273, 0.8362, 0.1446, 0.8819, 0.609, 0.0427, 0.0627, 0.2533, 0.2145, 0.0937, 0.7409, 0.1994, 0.8597, 0.1821, 0.9408, 0.7809, 0.2222, 0.1397, 0.2966, 0.6994, 0.6167, 0.9127, 0.3597, 0.1992, 0.9035, 0.3742, 0.4046, 0.7761, 0.965, 0.4538, 0.5224, 0.8031, 0.5332, 0.1002, 0.5499, 0.3421, 0.7572, 0.2197, 0.0996, 0.4481, 0.3904, 0.1036, 0.4731, 0.9785, 0.5652, 0.462, 0.5062, 0.3739, 0.663, 0.9755, 0.1828, 0.8062, 0.9932, 0.6955, 0.2323, 0.3607, 0.8869, 0.6058, 0.7819, 0.5225, 0.8529, 0.3844, 0.1839, 0.7879, 0.2583, 0.5478, 0.9993, 0.5769, 0.2856, 0.8734, 0.6948],
                    "ro_norm": [0.4275, 0.0961, 0.3739, 0.1239, 0.5464, 0.1243, 0.0856, 0.9547, 0.5855, 0.6446, 0.9565, 0.065, 0.7729, 0.3775, 0.118, 0.7212, 0.3982, 0.7195, 0.9374, 0.5526, 0.3569, 0.7459, 0.9907, 0.8563, 0.3444, 0.2844, 0.6006, 0.6126, 0.4359, 0.3874, 0.3632, 0.6076, 0.3734, 0.8147, 0.7378, 0.849, 0.6236, 0.3959, 0.4583, 0.6535, 0.3662, 0.3929, 0.2551, 0.1721, 0.2011, 0.8251, 0.5148, 0.5165, 0.7235, 0.3715, 0.3468, 0.4073, 0.6364, 0.8226, 0.6944, 0.7607, 0.7118, 0.966, 0.2324, 0.4862, 0.8977, 0.6239, 0.0251, 0.5666, 0.6514, 0.9336, 0.1218, 0.6314, 0.5315, 0.9201, 0.9696, 0.9899, 0.1623, 0.4665, 0.0634, 0.4552, 0.3108, 0.2336, 0.8573, 0.3188, 0.9405, 0.6401, 0.0035, 0.9304, 0.2599, 0.5367, 0.771, 0.8936, 0.6887, 0.3147, 0.5335, 0.6251, 0.5594, 0.0712, 0.4316, 0.092, 0.476, 0.5959, 0.2287, 0.0896],
                    "t_lo_w": [-0.1256, -0.1586, -0.0619, -0.0131, 0.1321, -0.3524, -0.1616, 0.3546, 0.0637, -0.0907, -0.0422, 0.0507, 0.0632, 0.4443, 0.0372, 0.396, 0.0946, 0.1535, -0.2414, 0.0124, 0.1189, 0.0385, -0.3294, 0.3075, -0.0414, -0.2551, -0.0326, 0.385, 0.2343, -0.0418, 0.0376, 0.3932, 0.0186, -0.0362, 0.0905, 0.2057, -0.2061, 0.0532, -0.1343, 0.0966, 0.3681, 0.0593, 0.1908, 0.0607, 0.0015, 0.3628, -0.305, 0.1149, -0.438, -0.0417, -0.1644, -0.25, 0.254, 0.1123, 0.0787, 0.0427, -0.1027, -0.168, 0.3715, 0.21, -0.2144, -0.1788, 0.1469, -0.2125, -0.0871, 0.0061, -0.2893, -0.0377, 0.0092, -0.0629, -0.0602, -0.0524, -0.2423, -0.0801, -0.0044, 0.1789, 0.1801, -0.1031, -0.2059, -0.1639, -0.0931, -0.1471, 0.1138, 0.1817, -0.081, 0.1666, -0.1087, -0.1683, 0.0614, 0.0885, 0.3394, -0.0134, 0.2517, 0.1053, 0.068, 0.179, 0.2142, -0.0533, 0.0375, -0.2004],
                    "t_hi_w": [0.5585, 0.5268, 0.8242, 0.9549, 0.7238, 0.7748, 0.8152, 1.0017, 0.6156, 0.6303, 0.8128, 0.8563, 0.9201, 0.9177, 0.6689, 1.0735, 0.9479, 0.7543, 0.5758, 0.7345, 0.8509, 0.7355, 0.774, 0.9369, 0.6289, 0.391, 0.7605, 1.2211, 1.0421, 0.7955, 0.8025, 0.8744, 0.8914, 0.7409, 0.8386, 0.8004, 0.5255, 0.7657, 0.8404, 0.9219, 1.1052, 0.8171, 0.971, 1.1336, 0.8162, 1.0776, 0.5661, 1.0069, 0.4027, 0.641, 0.4559, 0.4531, 1.1668, 0.999, 0.9265, 0.8464, 0.6112, 0.6988, 1.1173, 0.931, 0.4942, 0.6804, 0.8598, 0.6649, 0.8077, 0.6594, 0.6479, 0.5874, 0.9119, 0.7569, 0.609, 0.6693, 0.706, 0.8742, 0.7822, 0.8734, 0.8477, 0.5247, 0.5062, 0.6875, 0.7672, 0.6549, 0.9919, 0.7544, 0.7973, 0.8971, 0.5241, 0.4881, 0.747, 0.8769, 1.0045, 0.801, 0.936, 0.844, 0.7434, 0.819, 1.0152, 0.8134, 0.8456, 0.6248],
                    "r_lo_w": [-0.2441, -0.1998, -0.3009, -0.6129, -0.6197, -0.4656, -0.5675, -0.2229, -0.0477, -0.233, -0.5394, -0.3513, -0.4839, -0.3063, -0.2929, -0.6079, -0.1892, 0.024, -0.3669, -0.4729, -0.0596, -0.5754, -0.3221, -0.428, -0.7982, -0.3829, -0.502, -0.4692, -0.6129, -0.2211, -0.2961, -0.798, -0.1996, -0.4928, -0.729, -0.1616, -0.2965, -0.3449, -0.5869, -0.7586, -0.2488, -0.1611, -0.3174, -0.33, -0.4206, -0.3643, -0.3119, -0.7195, -0.5893, -0.3419, -0.5245, -0.337, -0.1272, -0.2668, -0.4476, -0.2474, -0.3755, -0.5775, -0.7197, -0.6237, -0.252, -0.3284, -0.2608, -0.6995, -0.3164, -0.5597, -0.2882, -0.4646, -0.4865, -0.3695, -0.1732, -0.6846, -0.7295, -0.5553, -0.2454, -0.0812, -0.3377, -0.3349, -0.0084, -0.4856, -0.327, -0.4953, -0.2927, -0.4407, -0.2286, -0.3574, 0.0148, -0.4458, -0.4686, -0.3425, -0.4238, -0.3875, -0.3166, -0.1267, -0.1745, -0.0354, -0.3319, -0.6084, -0.0776, -0.2353],
                    "r_hi_w": [0.4848, 0.6069, 0.3045, 0.0671, 0.1609, 0.4018, 0.1658, 0.3504, 0.5266, 0.4373, 0.1922, 0.2816, 0.3684, 0.6409, 0.5695, 0.3009, 0.5135, 0.69, 0.2746, 0.0795, 0.6771, 0.2063, 0.4423, 0.2221, 0.1451, 0.5394, 0.3011, 0.241, 0.1581, 0.6596, 0.4944, 0.1327, 0.43, 0.3543, 0.1882, 0.7079, 0.6961, 0.4957, 0.1191, 0.1915, 0.8063, 0.6634, 0.2912, 0.4865, 0.3542, 0.378, 0.4343, 0.1, 0.2423, 0.6365, 0.3858, 0.4321, 0.6703, 0.5713, 0.3555, 0.5243, 0.3473, 0.4493, -0.0182, 0.1306, 0.5239, 0.3703, 0.4527, -0.0168, 0.3053, 0.368, 0.2323, 0.3835, 0.2699, 0.3074, 0.9016, 0.1675, -0.0949, 0.3326, 0.6744, 0.7304, 0.5329, 0.3515, 0.8977, 0.354, 0.3473, 0.2129, 0.4097, 0.4733, 0.5156, 0.1032, 0.8655, 0.3961, 0.3378, 0.5047, 0.6424, 0.3906, 0.4053, 0.6856, 0.5958, 0.5186, 0.5323, 0.3007, 0.6958, 0.4564]
                }
            },
            "conclusion": "inconclusive"
        }
    ],
    "methods": [],
    "data": [
        {
            "id": "kin",
            "codebook": {
                "@context": "https://schema.org/",
                "@type": "Dataset",
                "name": "kin",
                "schemaVersion": "Psych-DS 0.1.0",
                "url": "https://osf.io/ewfhs/",
                "variableMeasured": [
                    {
                        "@type": "PropertyValue",
                        "name": "trust_self",
                        "description": "Number of trusting moves towards self-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "trust_other",
                        "description": "Number of trusting moves towards self-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "recip_self",
                        "description": "Number of reciprocating moves towards other-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "recip_other",
                        "description": "Number of reciprocating moves towards other-morphs",
                        "dataType": "int"
                    }
                ]
            },
            "data": {
                "trust_self": [1, 2, 2, 1, 1, 1, 1, 1, 2, 0, 2, 0, 1, 2, 2, 3, 2, 2, 1, 1, 2, 0, 0, 1],
                "trust_other": [1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 2, 1],
                "recip_self": [0, 1, 3, 2, 1, 1, 1, 3, 3, 2, 3, 1, 1, 2, 3, 3, 3, 1, 1, 1, 3, 0, 3, 1],
                "recip_other": [1, 1, 2, 2, 3, 2, 1, 3, 3, 1, 3, 0, 1, 3, 3, 3, 3, 0, 3, 0, 1, 0, 3, 2]
            }
        }
    ],
    "analyses": [
        {
            "id": "trust",
            "code": "    t.test(kin$trust_self, kin$trust_other, paired = TRUE, conf.level = 0.975)",
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": 2.5045,
                "parameter": 23,
                "p.value": 0.0198,
                "conf.int": [0.0213, 0.9787],
                "estimate": 0.5,
                "null.value": 0,
                "stderr": 0.1996,
                "alternative": "two.sided",
                "method": "Paired t-test",
                "data.name": "kin$trust_self and kin$trust_other"
            }
        },
        {
            "id": "recip",
            "code": "    t.test(kin$recip_self, kin$recip_other, paired = TRUE, conf.level = 0.975)",
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": -0.2138,
                "parameter": 23,
                "p.value": 0.8326,
                "conf.int": [-0.5089, 0.4256],
                "estimate": -0.0417,
                "null.value": 0,
                "stderr": 0.1949,
                "alternative": "two.sided",
                "method": "Paired t-test",
                "data.name": "kin$recip_self and kin$recip_other"
            }
        },
        {
            "id": "norm",
            "code": [
                "    {",
                "        ts <- shapiro.test(kin$trust_self)$p.value",
                "        to <- shapiro.test(kin$trust_other)$p.value",
                "        rs <- shapiro.test(kin$recip_self)$p.value",
                "        ro <- shapiro.test(kin$recip_other)$p.value",
                "    }",
                "    list(ts = ts, to = to, rs = rs, ro = ro)"
            ],
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "ts": 0.0039,
                "to": 0.0002,
                "rs": 0.0004,
                "ro": 0.0006
            }
        },
        {
            "id": "trust_wilcox",
            "code": [
                "    wilcox.test(kin$trust_self, kin$trust_other, paired = TRUE, ",
                "        conf.level = 0.975, conf.int = TRUE)"
            ],
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": 86.5,
                "parameter": {},
                "p.value": 0.0259,
                "null.value": 0,
                "alternative": "two.sided",
                "method": "Wilcoxon signed rank test with continuity correction",
                "data.name": "kin$trust_self and kin$trust_other",
                "conf.int": [-0, 1.5001],
                "estimate": 1
            }
        },
        {
            "id": "recip_wilcox",
            "code": [
                "    wilcox.test(kin$recip_self, kin$recip_other, paired = TRUE, ",
                "        conf.level = 0.975, conf.int = TRUE)"
            ],
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": 36,
                "parameter": {},
                "p.value": 0.8366,
                "null.value": 0,
                "alternative": "two.sided",
                "method": "Wilcoxon signed rank test with continuity correction",
                "data.name": "kin$recip_self and kin$recip_other",
                "conf.int": [-1.5, 1],
                "estimate": -0
            }
        }
    ]
}

