{
    "name": "Kinship and Prosocial Behaviour",
    "info": {
        "abstract": "A reanalysis of data from DeBruine (2002) Facial Resemblance Enhances Trust, PRSLB."
    },
    "authors": [
        {
            "orcid": "0000-0002-7523-5539",
            "name": {
                "surname": "DeBruine",
                "given": "Lisa M."
            },
            "roles": [
                "Conceptualization",
                "Data curation",
                "Software",
                "Writing - original draft",
                "Writing - review & editing"
            ],
            "email": "lisa.debruine@glasgow.ac.uk"
        },
        {
            "orcid": "0000-0002-0247-239X",
            "name": {
                "surname": "Lakens",
                "given": "DaniÃ«l"
            },
            "roles": [
                "Conceptualization",
                "Formal analysis",
                "Writing - original draft",
                "Writing - review & editing"
            ]
        }
    ],
    "hypotheses": [
        {
            "id": "self_pref",
            "description": "Cues of kinship will increase prosocial behaviour. Cues of kinship will be manipulated by morphed facial self-resemblance. Prosocial behaviour will be measured by responses in the trust game. The prediction is that the number of trusting AND/OR reciprocating moves will be greater to self morphs than to other morphs.",
            "criteria": [
                {
                    "id": "t_lo",
                    "analysis_id": "trust",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": true
                },
                {
                    "id": "t_hi",
                    "analysis_id": "trust",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "r_lo",
                    "analysis_id": "recip",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "r_hi",
                    "analysis_id": "recip",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "ts_norm",
                    "analysis_id": "norm",
                    "result": "ts",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "to_norm",
                    "analysis_id": "norm",
                    "result": "to",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "rs_norm",
                    "analysis_id": "norm",
                    "result": "rs",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "ro_norm",
                    "analysis_id": "norm",
                    "result": "ro",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "t_lo_w",
                    "analysis_id": "trust_wilcox",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "t_hi_w",
                    "analysis_id": "trust_wilcox",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "r_lo_w",
                    "analysis_id": "recip_wilcox",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "r_hi_w",
                    "analysis_id": "recip_wilcox",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                }
            ],
            "corroboration": {
                "description": "The hypothesis is corroborated if the 97.5% CI lower bound is greater than 0 and the 97.5% CI upper bound is greater than 0.2 (the SESOI) for either the trust or reciprocation moves. Use t.test if the data are normally distributed, or Wilcox test otherwise.",
                "evaluation": "(ts_norm & to_norm & t_lo & t_hi) | \n                   (!(ts_norm & to_norm) & t_lo_w & t_hi_w) | \n                   (rs_norm & ro_norm & r_lo & r_hi) | \n                   (!(rs_norm & ro_norm) & r_lo_w & r_hi_w)",
                "result": false
            },
            "falsification": {
                "description": "The hypothesis is falsified if the 97.5% CI upper bound is smaller than 0.2 (the SESOI) for both trust and reciprocation. Use t.test if the data are normally distributed, or Wilcox test otherwise.",
                "evaluation": "( (ts_norm & to_norm & !t_hi) |\n                     (!(ts_norm & to_norm) & !t_hi_w) ) & \n                   ( (rs_norm & ro_norm & !r_hi) |\n                     (!(rs_norm & ro_norm) & !r_hi_w) )",
                "result": false
            },
            "power": {
                "corroboration": 0.52,
                "falsification": 0,
                "inconclusive": 0.48,
                "criteria": {
                    "t_lo": [0.0223, 0.1624, -0.1886, -0.1171, -0.3413, -0.1631, -0.2152, 0.1017, -0.0818, -0.0842, 0.2065, 0.0381, 0.0021, 0.134, -0.2139, -0.1969, -0.1985, -0.138, -0.0604, 0.0172, 0.2548, -0.2327, 0.204, -0.1352, 0.2805, 0.019, 0.3405, -0.0321, 0.128, 0.0645, -0.0421, 0.2591, -0.3237, 0.0115, -0.3538, 0.1367, -0.1851, -0.1885, -0.0578, 0.1529, 0.2602, 0.066, -0.3204, 0.2427, -0.1665, -0.2226, -0.126, 0.1562, 0.1053, -0.2545, 0.2663, 0.1378, -0.0902, 0.1515, 0.0656, 0.0046, -0.1785, -0.0352, 0.4339, 0.1379, -0.0121, -0.0153, 0.0034, -0.0442, 0.4037, -0.0357, -0.105, 0.0171, -0.1562, 0.2208, 0.0977, 0.4192, 0.0601, 0.2357, -0.0395, -0.1897, 0.2207, 0.2649, 0.2119, -0.1205, -0.1592, -0.0875, 0.0244, -0.1319, -0.2125, 0.3085, -0.1016, -0.3027, 0.0586, 0.0561, 0.1984, -0.0403, 0.092, -0.0266, 0.2079, -0.2589, 0.1398, 0.0372, -0.1966, 0.063],
                    "t_hi": [0.7005, 0.716, 0.5805, 0.6839, 0.4358, 0.7025, 0.6093, 0.9937, 0.7122, 0.6435, 0.8274, 0.9401, 0.7142, 0.6683, 0.6966, 0.6792, 0.8801, 0.5374, 0.6095, 0.676, 1.0375, 0.5683, 0.9608, 0.6804, 0.9303, 0.7108, 0.9642, 0.7814, 0.9531, 0.7363, 0.9142, 1.0436, 0.4599, 0.9644, 0.3037, 0.8393, 0.7422, 0.7678, 0.871, 0.8701, 1.0115, 0.7913, 0.115, 1.1172, 0.6, 0.5849, 0.6716, 0.7428, 0.7216, 0.6723, 0.9588, 0.8902, 0.5294, 0.8088, 0.8137, 0.9038, 0.6458, 0.6006, 1.0708, 0.8313, 0.7488, 0.6941, 0.5952, 0.7188, 1.2847, 0.5732, 0.6606, 0.9185, 0.7836, 0.8851, 0.8742, 1.1089, 0.728, 1.0278, 0.779, 0.6195, 0.8205, 0.9928, 0.8928, 0.6687, 0.7126, 0.6904, 0.8167, 0.6656, 0.5279, 0.9504, 0.8207, 0.5203, 0.9766, 0.8412, 1.1413, 0.8363, 0.5701, 0.749, 0.7218, 0.8226, 0.6571, 0.7321, 0.5444, 0.739],
                    "r_lo": [-0.5027, -0.1169, -0.528, -0.4485, -0.5381, -0.3446, -0.5925, -0.3313, -0.122, -0.3391, -0.4092, -0.3737, -0.305, -0.6738, -0.1758, -0.129, -0.3283, -0.1881, -0.5159, -0.6201, -0.4877, -0.6638, -0.3761, -0.3786, -0.5835, -0.5087, -0.4873, -0.3663, -0.4605, -0.4105, -0.1959, -0.2788, -0.2024, -0.3232, -0.3108, -0.1546, -0.6453, -0.6296, -0.376, -0.2704, -0.3454, -0.1623, -0.2219, -0.4031, -0.6009, -0.3636, -0.4906, -0.6059, -0.3407, -0.3379, -0.5215, -0.4753, -0.5267, -0.4168, -0.3178, -0.4278, -0.4536, -0.649, -0.5506, 0.083, -0.5833, -0.3587, -0.7169, -0.5549, -0.3916, -0.0889, -0.3556, -0.307, -0.4597, -0.3951, -0.5637, -0.065, -0.2948, -0.4004, -0.3975, -0.0855, -0.1352, -0.1729, -0.6643, -0.5056, -0.366, -0.1069, -0.3011, -0.3666, -0.4208, -0.3464, -0.2475, -0.5923, -0.6549, -0.2926, -0.1379, -0.5099, -0.3266, -0.6749, -0.4456, -0.3477, -0.5233, -0.1747, -0.4888, -0.2524],
                    "r_hi": [0.1085, 0.7719, 0.2551, 0.1853, 0.3165, 0.4222, 0.195, 0.2568, 0.5509, 0.5488, 0.3233, 0.3298, 0.5252, 0.0711, 0.6474, 0.3976, 0.3233, 0.5083, 0.1173, 0.3019, 0.4373, 0.3826, 0.3275, 0.5787, 0.3021, 0.1748, 0.1297, 0.3721, 0.451, 0.4126, 0.4494, 0.6183, 0.4995, 0.3755, 0.626, 0.6378, 0.0475, 0.1995, 0.4917, 0.4607, 0.4048, 0.3987, 0.3294, 0.4003, 0.1663, 0.3, 0.1863, 0.092, 0.3436, 0.4338, 0.2933, 0.4207, 0.3002, 0.433, 0.4254, 0.2296, 0.0822, -0.03, 0.3504, 0.8043, 0.0917, 0.3544, 0.1886, 0.3573, 0.3632, 0.6667, 0.6017, 0.3462, 0.4031, 0.4298, -0.0107, 0.6268, 0.4485, 0.3723, 0.4129, 0.5876, 0.7347, 0.3421, 0.2523, 0.3934, 0.4885, 0.6468, 0.6644, 0.3884, 0.263, 0.4011, 0.5985, 0.252, 0.1565, 0.4799, 0.6025, 0.1239, 0.3121, 0.0074, 0.3063, 0.464, 0.4323, 0.5166, 0.2985, 0.5916],
                    "ts_norm": [0.2126, 0.4093, 0.5237, 0.4765, 0.4926, 0.5826, 0.497, 0.1219, 0.3006, 0.3682, 0.3736, 0.4245, 0.4659, 0.0469, 0.5432, 0.5657, 0.0687, 0.5553, 0.7182, 0.4814, 0.5085, 0.8934, 0.5851, 0.5892, 0.684, 0.9637, 0.6567, 0.1097, 0.4331, 0.3577, 0.5633, 0.8729, 0.478, 0.2335, 0.3827, 0.2878, 0.006, 0.1964, 0.603, 0.6687, 0.5039, 0.182, 0.2968, 0.1118, 0.8813, 0.048, 0.5859, 0.5235, 0.5406, 0.3681, 0.3362, 0.3335, 0.0904, 0.105, 0.6036, 0.4515, 0.5288, 0.5183, 0.8956, 0.0261, 0.6938, 0.7347, 0.3893, 0.4777, 0.5121, 0.0977, 0.479, 0.268, 0.193, 0.4889, 0.7997, 0.629, 0.8202, 0.2342, 0.5325, 0.4534, 0.1759, 0.2201, 0.9026, 0.0498, 0.3783, 0.7796, 0.161, 0.0528, 0.8309, 0.3605, 0.4751, 0.6189, 0.0507, 0.8897, 0.8727, 0.4372, 0.6628, 0.9896, 0.1681, 0.6936, 0.9946, 0.6582, 0.5825, 0.4795],
                    "to_norm": [0.489, 0.0117, 0.9986, 0.621, 0.7196, 0.0244, 0.4237, 0.9835, 0.9708, 0.2473, 0.4839, 0.7239, 0.2151, 0.8509, 0.0755, 0.766, 0.74, 0.4446, 0.2534, 0.7059, 0.4971, 0.8407, 0.5481, 0.5866, 0.1108, 0.5343, 0.5713, 0.554, 0.2812, 0.8857, 0.0746, 0.9691, 0.233, 0.5123, 0.9724, 0.6012, 0.3921, 0.9721, 0.0239, 0.3895, 0.305, 0.0122, 0.6771, 0.4484, 0.3825, 0.8373, 0.4844, 0.3303, 0.7479, 0.5021, 0.2361, 0.8059, 0.3862, 0.0305, 0.6211, 0.6605, 0.7551, 0.5072, 0.5266, 0.9647, 0.9558, 0.8511, 0.6436, 0.708, 0.9648, 0.0275, 0.3277, 0.6791, 0.0747, 0.7676, 0.0742, 0.9243, 0.8421, 0.0182, 0.2134, 0.7514, 0.2207, 0.8705, 0.426, 0.1763, 0.1646, 0.1493, 0.3884, 0.325, 0.6656, 0.1131, 0.3124, 0.5527, 0.5955, 0.8364, 0.4825, 0.9104, 0.751, 0.1564, 0.2705, 0.4619, 0.2277, 0.1557, 0.4358, 0.1957],
                    "rs_norm": [0.4747, 0.9255, 0.5995, 0.342, 0.6698, 0.6382, 0.9382, 0.7489, 0.8368, 0.7078, 0.7857, 0.6441, 0.7676, 0.9425, 0.269, 0.2243, 0.2154, 0.396, 0.1004, 0.9428, 0.6641, 0.604, 0.1976, 0.7536, 0.746, 0.1941, 0.9208, 0.8332, 0.955, 0.7575, 0.5752, 0.6876, 0.6414, 0.4682, 0.221, 0.1101, 0.4951, 0.9862, 0.7566, 0.6932, 0.882, 0.2218, 0.7476, 0.9689, 0.5332, 0.8043, 0.4413, 0.8563, 0.2828, 0.22, 0.1527, 0.701, 0.0727, 0.6974, 0.729, 0.2759, 0.7986, 0.5057, 0.9582, 0.0977, 0.9728, 0.711, 0.1472, 0.3996, 0.4735, 0.7307, 0.8426, 0.6461, 0.4258, 0.1446, 0.8539, 0.508, 0.9615, 0.7116, 0.371, 0.3863, 0.3371, 0.7608, 0.4456, 0.9491, 0.9187, 0.0826, 0.2863, 0.1842, 0.6142, 0.9985, 0.8662, 0.6002, 0.3821, 0.5893, 0.4183, 0.5513, 0.7005, 0.4723, 0.7108, 0.6266, 0.5195, 0.5542, 0.3814, 0.3681],
                    "ro_norm": [0.1854, 0.1183, 0.1895, 0.1164, 0.8136, 0.5948, 0.7603, 0.4246, 0.7235, 0.817, 0.9517, 0.1094, 0.4309, 0.6315, 0.2828, 0.5498, 0.0426, 0.9308, 0.823, 0.3699, 0.7974, 0.0349, 0.2072, 0.2778, 0.5776, 0.5415, 0.1114, 0.4779, 0.2363, 0.0365, 0.4343, 0.9533, 0.2167, 0.3642, 0.202, 0.1563, 0.5729, 0.9918, 0.9234, 0.1648, 0.8041, 0.6542, 0.3231, 0.144, 0.9806, 0.3694, 0.9585, 0.2335, 0.6034, 0.9524, 0.5187, 0.0094, 0.3021, 0.6946, 0.304, 0.8339, 0.3146, 0.6675, 0.2079, 0.0264, 0.5763, 0.8197, 0.6086, 0.0022, 0.8897, 0.5444, 0.0477, 0.6727, 0.8858, 0.4763, 0.5486, 0.2021, 0.2457, 0.0692, 0.6153, 0.1951, 0.1417, 0.4404, 0.8021, 0.9919, 0.7841, 0.9789, 0.9788, 0.786, 0.2093, 0.5192, 0.8306, 0.4785, 0.0882, 0.3318, 0.0716, 0.8742, 0.2492, 0.3125, 0.1727, 0.3298, 0.8811, 0.6225, 0.8585, 0.0093],
                    "t_lo_w": [-0.0231, 0.1382, -0.1774, -0.1089, -0.3275, -0.1826, -0.1744, 0.0568, -0.1056, -0.0734, 0.2212, 0.0125, 0.0016, 0.1419, -0.2137, -0.2636, -0.2152, -0.0905, -0.0721, -0.0009, 0.2306, -0.2541, 0.2032, -0.1568, 0.2549, -0.0332, 0.3529, -0.0233, 0.0894, 0.042, -0.0339, 0.2205, -0.3272, 0.0342, -0.3533, 0.1148, -0.1596, -0.2008, -0.041, 0.1328, 0.2645, 0.056, -0.3219, 0.2128, -0.1652, -0.242, -0.1114, 0.1485, 0.097, -0.2604, 0.2671, 0.1736, -0.081, 0.1511, 0.0647, 0.0071, -0.1858, -0.0334, 0.4274, 0.0928, -0.0059, -0.0328, -0.0143, -0.1177, 0.448, -0.0386, -0.1109, -0.0096, -0.185, 0.2022, 0.0681, 0.3988, 0.0887, 0.1933, -0.0759, -0.2136, 0.2142, 0.2258, 0.2253, -0.0541, -0.1078, -0.1186, 0.0183, -0.1426, -0.2256, 0.4392, -0.1275, -0.3233, 0.0297, 0.0273, 0.1718, -0.0399, 0.0904, 0.1979, 0.2098, -0.2495, 0.1158, 0.014, -0.2076, 0.0643],
                    "t_hi_w": [0.7139, 0.6989, 0.5836, 0.6794, 0.4944, 0.7465, 0.6327, 1.035, 0.6536, 0.6621, 0.844, 0.9454, 0.707, 0.6819, 0.7462, 0.6754, 0.8767, 0.5782, 0.5992, 0.7014, 1.0585, 0.557, 1.0281, 0.7013, 0.9525, 0.7346, 0.9448, 0.8386, 0.9621, 0.7575, 0.9445, 0.9822, 0.4529, 0.9504, 0.2943, 0.8314, 0.8009, 0.7865, 0.8425, 0.8936, 1.0123, 0.8136, 0.047, 1.1339, 0.6262, 0.616, 0.7303, 0.7584, 0.7231, 0.6971, 0.9879, 0.9034, 0.578, 0.8068, 0.8393, 0.8646, 0.6586, 0.5341, 1.1111, 0.7861, 0.7816, 0.6829, 0.6, 0.7092, 1.3116, 0.619, 0.66, 0.9637, 0.8595, 0.949, 0.8589, 1.1155, 0.7454, 1.0527, 0.7728, 0.6053, 0.829, 1.0251, 0.9105, 0.6727, 0.7549, 0.7468, 0.8654, 0.656, 0.4816, 0.9201, 0.8321, 0.5394, 1.0021, 0.9078, 1.1488, 0.8654, 0.596, 0.6569, 0.7716, 0.8563, 0.644, 0.772, 0.5523, 0.7586],
                    "r_lo_w": [-0.5102, -0.1507, -0.5537, -0.4398, -0.5588, -0.3289, -0.6558, -0.3532, -0.0742, -0.3513, -0.4598, -0.3808, -0.2939, -0.6608, -0.1652, -0.1358, -0.3193, -0.2322, -0.4901, -0.6079, -0.4842, -0.6721, -0.3981, -0.4216, -0.5851, -0.4805, -0.4306, -0.2985, -0.459, -0.4109, -0.2172, -0.2772, -0.2064, -0.3184, -0.2812, -0.1526, -0.6554, -0.6596, -0.4333, -0.2197, -0.3353, -0.1882, -0.142, -0.441, -0.596, -0.418, -0.4941, -0.6129, -0.2811, -0.3641, -0.5725, -0.4963, -0.5159, -0.4335, -0.3364, -0.4663, -0.4554, -0.6554, -0.4908, 0.0575, -0.5892, -0.3785, -0.766, -0.5867, -0.3982, -0.0979, -0.3594, -0.3261, -0.4508, -0.3987, -0.5672, -0.0932, -0.2537, -0.3695, -0.4273, -0.093, -0.1677, -0.2051, -0.6636, -0.5208, -0.2972, -0.1319, -0.3144, -0.3761, -0.4162, -0.3173, -0.2379, -0.6002, -0.6767, -0.2896, -0.15, -0.5617, -0.3445, -0.7102, -0.349, -0.3476, -0.4818, -0.0891, -0.492, -0.2334],
                    "r_hi_w": [0.1218, 0.7811, 0.2963, 0.1914, 0.3111, 0.4648, 0.2458, 0.2741, 0.5326, 0.5954, 0.3369, 0.3613, 0.6032, 0.0873, 0.5984, 0.4265, 0.3383, 0.5024, 0.1331, 0.3594, 0.4608, 0.3999, 0.3496, 0.5911, 0.3016, 0.1747, 0.1428, 0.3836, 0.4784, 0.4459, 0.4449, 0.6747, 0.4546, 0.4271, 0.6694, 0.6723, 0.0065, 0.1778, 0.5204, 0.465, 0.4087, 0.4175, 0.2692, 0.4444, 0.231, 0.3278, 0.1867, 0.099, 0.3605, 0.4093, 0.3237, 0.444, 0.3724, 0.4756, 0.4027, 0.2845, 0.0959, 0.0147, 0.3628, 0.8177, 0.0989, 0.3647, 0.2058, 0.4072, 0.3459, 0.6778, 0.5621, 0.352, 0.3858, 0.461, 0.0071, 0.5779, 0.4515, 0.3494, 0.4034, 0.5996, 0.7405, 0.3519, 0.2349, 0.4687, 0.4603, 0.6815, 0.6929, 0.4559, 0.2919, 0.3808, 0.5862, 0.2843, 0.2038, 0.4669, 0.6202, 0.0861, 0.308, 0.0441, 0.3053, 0.4612, 0.3564, 0.4572, 0.3161, 0.6242]
                }
            },
            "conclusion": "inconclusive"
        }
    ],
    "methods": [],
    "data": [
        {
            "id": "kin",
            "codebook": {
                "@context": "https://schema.org/",
                "@type": "Dataset",
                "name": "kin",
                "schemaVersion": "Psych-DS 0.1.0",
                "url": "https://osf.io/ewfhs/",
                "variableMeasured": [
                    {
                        "@type": "PropertyValue",
                        "name": "trust_self",
                        "description": "Number of trusting moves towards self-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "trust_other",
                        "description": "Number of trusting moves towards self-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "recip_self",
                        "description": "Number of reciprocating moves towards other-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "recip_other",
                        "description": "Number of reciprocating moves towards other-morphs",
                        "dataType": "int"
                    }
                ]
            },
            "data": {
                "trust_self": [1, 2, 2, 1, 1, 1, 1, 1, 2, 0, 2, 0, 1, 2, 2, 3, 2, 2, 1, 1, 2, 0, 0, 1],
                "trust_other": [1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 2, 1],
                "recip_self": [0, 1, 3, 2, 1, 1, 1, 3, 3, 2, 3, 1, 1, 2, 3, 3, 3, 1, 1, 1, 3, 0, 3, 1],
                "recip_other": [1, 1, 2, 2, 3, 2, 1, 3, 3, 1, 3, 0, 1, 3, 3, 3, 3, 0, 3, 0, 1, 0, 3, 2]
            }
        }
    ],
    "analyses": [
        {
            "id": "trust",
            "code": "    t.test(kin$trust_self, kin$trust_other, paired = TRUE, conf.level = 0.975)",
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": 2.5045,
                "parameter": 23,
                "p.value": 0.0198,
                "conf.int": [0.0213, 0.9787],
                "estimate": 0.5,
                "null.value": 0,
                "stderr": 0.1996,
                "alternative": "two.sided",
                "method": "Paired t-test",
                "data.name": "kin$trust_self and kin$trust_other"
            }
        },
        {
            "id": "recip",
            "code": "    t.test(kin$recip_self, kin$recip_other, paired = TRUE, conf.level = 0.975)",
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": -0.2138,
                "parameter": 23,
                "p.value": 0.8326,
                "conf.int": [-0.5089, 0.4256],
                "estimate": -0.0417,
                "null.value": 0,
                "stderr": 0.1949,
                "alternative": "two.sided",
                "method": "Paired t-test",
                "data.name": "kin$recip_self and kin$recip_other"
            }
        },
        {
            "id": "norm",
            "code": [
                "    {",
                "        ts <- shapiro.test(kin$trust_self)$p.value",
                "        to <- shapiro.test(kin$trust_other)$p.value",
                "        rs <- shapiro.test(kin$recip_self)$p.value",
                "        ro <- shapiro.test(kin$recip_other)$p.value",
                "    }",
                "    list(ts = ts, to = to, rs = rs, ro = ro)"
            ],
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "ts": 0.0039,
                "to": 0.0002,
                "rs": 0.0004,
                "ro": 0.0006
            }
        },
        {
            "id": "trust_wilcox",
            "code": [
                "    wilcox.test(kin$trust_self, kin$trust_other, paired = TRUE, ",
                "        conf.level = 0.975, conf.int = TRUE)"
            ],
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": 86.5,
                "parameter": {},
                "p.value": 0.0259,
                "null.value": 0,
                "alternative": "two.sided",
                "method": "Wilcoxon signed rank test with continuity correction",
                "data.name": "kin$trust_self and kin$trust_other",
                "conf.int": [-0, 1.5001],
                "estimate": 1
            }
        },
        {
            "id": "recip_wilcox",
            "code": [
                "    wilcox.test(kin$recip_self, kin$recip_other, paired = TRUE, ",
                "        conf.level = 0.975, conf.int = TRUE)"
            ],
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": 36,
                "parameter": {},
                "p.value": 0.8366,
                "null.value": 0,
                "alternative": "two.sided",
                "method": "Wilcoxon signed rank test with continuity correction",
                "data.name": "kin$recip_self and kin$recip_other",
                "conf.int": [-1.5, 1],
                "estimate": -0
            }
        }
    ]
}

