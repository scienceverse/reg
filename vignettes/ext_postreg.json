{
    "name": "Kinship and Prosocial Behaviour",
    "info": {
        "abstract": "A reanalysis of data from DeBruine (2002) Facial Resemblance Enhances Trust, PRSLB."
    },
    "authors": [
        {
            "orcid": "0000-0002-7523-5539",
            "name": {
                "surname": "DeBruine",
                "given": "Lisa M."
            },
            "roles": [
                "Conceptualization",
                "Data curation",
                "Software",
                "Writing - original draft",
                "Writing - review & editing"
            ],
            "email": "lisa.debruine@glasgow.ac.uk"
        },
        {
            "orcid": "0000-0002-0247-239X",
            "name": {
                "surname": "Lakens",
                "given": "DaniÃ«l"
            },
            "roles": [
                "Conceptualization",
                "Formal analysis",
                "Writing - original draft",
                "Writing - review & editing"
            ]
        }
    ],
    "hypotheses": [
        {
            "id": "self_pref",
            "description": "Cues of kinship will increase prosocial behaviour. Cues of kinship will be manipulated by morphed facial self-resemblance. Prosocial behaviour will be measured by responses in the trust game. The prediction is that the number of trusting AND/OR reciprocating moves will be greater to self morphs than to other morphs.",
            "criteria": [
                {
                    "id": "t_lo",
                    "analysis_id": "trust",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": true
                },
                {
                    "id": "t_hi",
                    "analysis_id": "trust",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "r_lo",
                    "analysis_id": "recip",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "r_hi",
                    "analysis_id": "recip",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "ts_norm",
                    "analysis_id": "norm",
                    "result": "ts",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "to_norm",
                    "analysis_id": "norm",
                    "result": "to",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "rs_norm",
                    "analysis_id": "norm",
                    "result": "rs",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "ro_norm",
                    "analysis_id": "norm",
                    "result": "ro",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "t_lo_w",
                    "analysis_id": "trust_wilcox",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "t_hi_w",
                    "analysis_id": "trust_wilcox",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "r_lo_w",
                    "analysis_id": "recip_wilcox",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "r_hi_w",
                    "analysis_id": "recip_wilcox",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                }
            ],
            "corroboration": {
                "description": "The hypothesis is corroborated if the 97.5% CI lower bound is greater than 0 and the 97.5% CI upper bound is greater than 0.2 (the SESOI) for either the trust or reciprocation moves. Use t.test if the data are normally distributed, or Wilcox test otherwise.",
                "evaluation": "(ts_norm & to_norm & t_lo & t_hi) | \n                   (!(ts_norm & to_norm) & t_lo_w & t_hi_w) | \n                   (rs_norm & ro_norm & r_lo & r_hi) | \n                   (!(rs_norm & ro_norm) & r_lo_w & r_hi_w)",
                "result": false
            },
            "falsification": {
                "description": "The hypothesis is falsified if the 97.5% CI upper bound is smaller than 0.2 (the SESOI) for both trust and reciprocation. Use t.test if the data are normally distributed, or Wilcox test otherwise.",
                "evaluation": "( (ts_norm & to_norm & !t_hi) |\n                     (!(ts_norm & to_norm) & !t_hi_w) ) & \n                   ( (rs_norm & ro_norm & !r_hi) |\n                     (!(rs_norm & ro_norm) & !r_hi_w) )",
                "result": false
            },
            "power": {
                "corroboration": 0.58,
                "falsification": 0,
                "inconclusive": 0.42,
                "criteria": {
                    "t_lo": [0.4269, -0.0972, 0.2018, -0.1673, 0.0472, 0.0441, 0.12, 0.0046, 0.2267, 0.1271, -0.1169, -0.0999, 0.0458, -0.0464, 0.2301, 0.1213, -0.1465, 0.1623, 0.0678, 0.2402, 0.0374, -0.0286, 0.0255, 0.03, 0.0063, 0.2776, -0.2299, 0.1778, 0.0181, 0.0247, 0.1811, 0.1499, -0.0825, 0.1968, 0.2355, 0.0923, -0.0085, 0.2453, 0.0834, -0.2029, -0.064, 0.0034, -0.1031, 0.0382, -0.0563, 0.0205, -0.0327, 0.0062, 0.3357, -0.1792, 0.3598, -0.072, -0.1, 0.3737, -0.0972, 0.0691, 0.0597, -0.0904, 0.0298, 0.4031, 0.1328, -0.1643, 0.2775, -0.0299, -0.2368, -0.0132, 0.0709, 0.2013, -0.1847, 0.371, 0.2181, -0.3988, 0.0552, 0.158, 0.3239, -0.3027, -0.0578, 0.229, -0.0436, 0.1011, 0.0388, 0.0958, -0.0265, -0.3993, 0.0899, -0.1587, -0.1708, -0.2328, 0.0755, -0.0378, -0.2344, -0.1261, 0.0943, -0.0083, 0.061, -0.2177, -0.5074, -0.0412, -0.1235, -0.1508],
                    "t_hi": [1.1558, 0.802, 0.9209, 0.7518, 1.0119, 0.9679, 0.9242, 0.6763, 0.86, 0.7669, 0.7061, 0.6555, 0.8289, 0.8146, 1.0345, 0.792, 0.6469, 1.0731, 1.0029, 0.8933, 0.8185, 0.8609, 1.0359, 0.6579, 0.8349, 0.8621, 0.5948, 0.8982, 0.7791, 0.9755, 0.9485, 0.9967, 0.576, 1.1653, 0.9611, 0.7914, 0.7596, 0.9248, 0.8495, 0.5557, 0.7227, 0.6645, 0.788, 0.8082, 0.8139, 0.9499, 0.5578, 0.7577, 1.038, 0.5218, 1.1343, 0.6229, 0.7567, 1.2368, 0.6386, 0.7805, 0.8202, 0.7231, 0.6011, 1.1632, 0.886, 0.6788, 0.9351, 0.8719, 0.5295, 0.9145, 0.8871, 0.953, 0.6974, 0.9688, 1.0466, 0.5073, 1.0469, 0.7944, 1.1083, 0.6292, 0.7734, 1.0628, 0.7818, 0.6588, 0.8157, 0.8326, 0.7778, 0.3316, 0.8563, 0.5366, 0.8149, 0.6799, 0.8188, 0.9434, 0.3322, 0.6768, 0.9048, 0.8245, 0.6763, 0.67, 0.4926, 0.8556, 0.6123, 0.5205],
                    "r_lo": [-0.3771, -0.1934, -0.1436, -0.6419, 0.0422, -0.3343, -0.7082, -0.5806, -0.2976, -0.4053, -0.5502, -0.4676, -0.4876, -0.506, -0.6735, -0.2897, -0.0861, -0.3737, -0.2467, -0.3127, -0.2587, -0.3225, -0.2927, -0.4519, -0.3523, -0.376, -0.4017, -0.3547, -0.3134, -0.4035, -0.1383, -0.3399, -0.3589, -0.2725, -0.4569, -0.195, -0.4626, -0.2424, -0.4604, -0.581, -0.4772, -0.3731, 0.1515, -0.372, -0.4341, -0.234, -0.2799, -0.5173, -0.3803, -0.3481, -0.0915, -0.4634, -0.4268, -0.196, -0.1534, -0.4417, -0.407, -0.4312, -0.2675, -0.2657, -0.417, -0.4825, -0.4262, -0.221, -0.3196, -0.277, -0.1552, -0.3394, -0.603, -0.3165, -0.4006, -0.1953, -0.1925, -0.3466, -0.2485, -0.1916, -0.4208, -0.321, -0.5797, -0.3507, -0.2482, -0.5481, -0.2989, -0.4457, -0.1745, -0.3246, -0.2214, -0.4112, -0.124, -0.6957, -0.4619, -0.0766, -0.1208, -0.1709, -0.3535, -0.2232, -0.2047, -0.8656, -0.2893, -0.3962],
                    "r_hi": [0.4182, 0.4885, 0.5201, 0.1523, 0.8798, 0.3684, 0.3616, 0.4456, 0.6877, 0.2357, 0.5199, 0.2078, 0.4158, 0.367, 0.1684, 0.3604, 0.5517, 0.4029, 0.4578, 0.3394, 0.5586, 0.4296, 0.6119, 0.2832, 0.3792, 0.4101, 0.4415, 0.211, 0.5044, 0.4066, 0.5142, 0.557, 0.3071, 0.6425, 0.4242, 0.4123, 0.2516, 0.3731, 0.3358, 0.2626, 0.2752, 0.4307, 0.6607, 0.289, 0.3574, 0.4408, 0.4328, 0.3297, 0.3998, 0.3936, 0.5702, 0.2794, 0.3933, 0.5629, 0.7961, 0.364, 0.1497, 0.3931, 0.3382, 0.6881, 0.2786, 0.2285, 0.4721, 0.409, 0.4429, 0.3663, 0.3394, 0.5341, 0.1283, 0.5007, 0.3073, 0.6577, 0.3683, 0.3354, 0.5664, 0.5049, 0.3632, 0.3321, 0.1782, 0.5336, 0.5932, 0.2806, 0.4628, 0.1716, 0.5091, 0.4282, 0.5846, 0.3994, 0.7343, 0.2061, 0.3074, 0.6531, 0.5418, 0.6442, 0.483, 0.5841, 0.3398, -0.0419, 0.6958, 0.4128],
                    "ts_norm": [0.9429, 0.033, 0.7742, 0.3487, 0.6086, 0.1904, 0.0837, 0.4668, 0.3471, 0.8804, 0.7225, 0.2055, 0.2741, 0.1648, 0.4009, 0.4003, 0.4655, 0.6598, 0.9749, 0.252, 0.567, 0.0426, 0.9147, 0.0326, 0.9529, 0.4028, 0.9667, 0.7336, 0.78, 0.2414, 0.7726, 0.4859, 0.7433, 0.0053, 0.7516, 0.4387, 0.6674, 0.7702, 0.5952, 0.2596, 0.6606, 0.8623, 0.1132, 0.9632, 0.0032, 0.4486, 0.408, 0.1573, 0.0199, 0.9693, 0.1492, 0.4168, 0.0086, 0.4676, 0.9394, 0.0209, 0.5071, 0.7254, 0.4436, 0.7688, 0.2654, 0.9853, 0.251, 0.032, 0.3963, 0.4676, 0.5661, 0.4594, 0.149, 0.0917, 0.7019, 0.6132, 0.3496, 0.9713, 0.4901, 0.3532, 0.9414, 0.8878, 0.4006, 0.5892, 0.459, 0.8507, 0.3211, 0.0165, 0.179, 0.0527, 0.6993, 0.0244, 0.4473, 0.9089, 0.7695, 0.179, 0.8276, 0.4365, 0.4208, 0.2071, 0.938, 0.6235, 0.4534, 0.9981],
                    "to_norm": [0.546, 0.7198, 0.9774, 0.3975, 0.9214, 0.3808, 0.4069, 0.2257, 0.4245, 0.6861, 0.906, 0.7514, 0.48, 0.1346, 0.4597, 0.4735, 0.0233, 0.5409, 0.8367, 0.5173, 0.4788, 0.5071, 0.445, 0.1029, 0.4265, 0.4992, 0.8469, 0.0328, 0.8456, 0.9969, 0.1505, 0.2347, 0.3233, 0.5474, 0.5294, 0.9204, 0.165, 0.6999, 0.3341, 0.3535, 0.3028, 0.966, 0.3119, 0.2292, 0.9523, 0.5792, 0.4382, 0.8439, 0.1334, 0.17, 0.0417, 0.4469, 0.0044, 0.0687, 0.5439, 0.0755, 0.7518, 0.3846, 0.0807, 0.1137, 0.9083, 0.3969, 0.0019, 0.61, 0.789, 0.307, 0.7656, 0.7318, 0.0139, 0.3231, 0.6706, 0.9179, 0.9611, 0.9105, 0.1572, 0.9535, 0.5236, 0.0727, 0.0766, 0.1491, 0.8529, 0.2627, 0.8359, 0.5565, 0.3028, 0.5958, 0.2871, 0.6361, 0.829, 0.1737, 0.3622, 0.1836, 0.1077, 0.8946, 0.8914, 0.5802, 0.4134, 0.5139, 0.4092, 0.661],
                    "rs_norm": [0.524, 0.9243, 0.0661, 0.8786, 0.8177, 0.6536, 0.6078, 0.1746, 0.2293, 0.3643, 0.671, 0.8855, 0.8017, 0.5403, 0.9924, 0.5921, 0.4076, 0.621, 0.1222, 0.7041, 0.5573, 0.8758, 0.834, 0.5279, 0.4222, 0.9591, 0.8669, 0.9979, 0.4875, 0.7908, 0.0509, 0.2962, 0.695, 0.3772, 0.9229, 0.286, 0.7133, 0.6586, 0.174, 0.5056, 0.4771, 0.8495, 0.1112, 0.7636, 0.1726, 0.8179, 0.9797, 0.5263, 0.5442, 0.4531, 0.7305, 0.3327, 0.3633, 0.9654, 0.7399, 0.0382, 0.1025, 0.585, 0.7543, 0.7863, 0.6526, 0.8639, 0.7079, 0.5247, 0.875, 0.6297, 0.8638, 0.918, 0.5112, 0.5247, 0.0735, 0.435, 0.4012, 0.0957, 0.4142, 0.9155, 0.9305, 0.9571, 0.7884, 0.9122, 0.6788, 0.4769, 0.0436, 0.6731, 0.5971, 0.8658, 0.0926, 0.7893, 0.915, 0.4355, 0.7013, 0.1061, 0.6941, 0.3905, 0.6729, 0.5302, 0.0846, 0.2832, 0.4517, 0.9276],
                    "ro_norm": [0.7676, 0.8589, 0.9754, 0.7169, 0.5384, 0.3303, 0.6747, 0.8977, 0.8412, 0.2707, 0.2981, 0.8603, 0.6317, 0.0462, 0.6341, 0.7299, 0.8568, 0.1436, 0.189, 0.6227, 0.2685, 0.6854, 0.1503, 0.6067, 0.487, 0.3629, 0.5093, 0.4031, 0.5245, 0.2166, 0.6193, 0.018, 0.274, 0.0888, 0.1384, 0.6398, 0.2816, 0.6548, 0.9631, 0.9167, 0.9261, 0.9963, 0.9946, 0.9326, 0.0428, 0.1317, 0.9265, 0.2879, 0.6303, 0.9988, 0.7371, 0.573, 0.6872, 0.6958, 0.9501, 0.3868, 0.8795, 0.7008, 0.7575, 0.2075, 0.8623, 0.7302, 0.0596, 0.4644, 0.6298, 0.9707, 0.9139, 0.5871, 0.7068, 0.1774, 0.6467, 0.5273, 0.787, 0.2251, 0.644, 0.4375, 0.1936, 0.0158, 0.6313, 0.9105, 0.5208, 0.0395, 0.532, 0.4748, 0.0944, 0.406, 0.2067, 0.1838, 0.2445, 0.5014, 0.5869, 0.5149, 0.1555, 0.571, 0.4892, 0.7963, 0.721, 0.8782, 0.352, 0.2521],
                    "t_lo_w": [0.4118, -0.1147, 0.1689, -0.2191, 0.0383, 0.0662, 0.1907, 0.0003, 0.2046, 0.1299, -0.1318, -0.1063, 0.0893, 0.0452, 0.2064, 0.1173, -0.1469, 0.119, 0.0252, 0.2145, 0.0425, -0.0171, -0.0179, 0.0067, 0.0288, 0.2354, -0.237, 0.2073, 0.0058, 0.0329, 0.1345, 0.0799, -0.1245, 0.214, 0.2272, 0.0545, -0.0182, 0.2802, 0.0617, -0.1477, -0.0795, -0.0204, -0.1154, 0.0207, -0.0945, -0.003, -0.0519, -0.0406, 0.3231, -0.1983, 0.3296, -0.0974, -0.1085, 0.3666, -0.1485, 0.1595, 0.0105, -0.1196, 0.0196, 0.4144, 0.1058, -0.206, 0.2734, -0.0619, -0.2516, -0.0288, 0.0605, 0.1882, -0.183, 0.3512, 0.2157, -0.3844, 0.1154, 0.1777, 0.4138, -0.339, -0.1321, 0.2216, -0.0642, 0.0968, 0.0244, 0.0779, -0.0568, -0.4132, -0.0228, -0.1118, -0.1589, -0.1707, 0.0481, -0.0607, -0.2439, -0.0955, 0.0487, -0.06, 0.0364, -0.2605, -0.5564, -0.1041, -0.1683, -0.1813],
                    "t_hi_w": [1.1473, 0.7934, 0.9693, 0.7525, 0.9353, 0.9548, 0.9037, 0.6696, 0.8865, 0.7949, 0.7147, 0.676, 0.8761, 0.7901, 1.0698, 0.8241, 0.6173, 1.0903, 1.0144, 0.9061, 0.6861, 0.8853, 1.0783, 0.6671, 0.8443, 0.8854, 0.598, 0.8358, 0.814, 1.0082, 0.9812, 0.9791, 0.5805, 1.192, 0.991, 0.8201, 0.765, 0.8857, 0.8779, 0.5173, 0.7456, 0.661, 0.8019, 0.8668, 0.8308, 0.9697, 0.5303, 0.7582, 1.0763, 0.5932, 1.0703, 0.673, 0.7998, 1.2263, 0.6479, 0.7847, 0.8623, 0.7515, 0.6086, 1.1341, 0.9401, 0.6969, 0.8673, 0.8752, 0.5579, 0.8654, 0.9369, 0.9493, 0.6881, 0.9888, 1.0438, 0.523, 1.0795, 0.7872, 1.0766, 0.6334, 0.7918, 1.1184, 0.8157, 0.6185, 0.8274, 0.8528, 0.7867, 0.3427, 0.847, 0.4941, 0.8694, 0.6726, 0.832, 0.993, 0.3244, 0.699, 0.9191, 0.8122, 0.6964, 0.6858, 0.4771, 0.8964, 0.6286, 0.5199],
                    "r_lo_w": [-0.4114, -0.2043, -0.1732, -0.6876, 0.0221, -0.3103, -0.7581, -0.6526, -0.3587, -0.4408, -0.586, -0.4509, -0.4916, -0.4686, -0.6105, -0.3368, -0.0826, -0.3046, -0.2337, -0.2953, -0.2654, -0.2915, -0.3087, -0.4212, -0.3634, -0.3193, -0.392, -0.3682, -0.3355, -0.3748, -0.0963, -0.3055, -0.3865, -0.2532, -0.4803, -0.2286, -0.503, -0.2557, -0.4522, -0.5973, -0.5055, -0.3759, 0.1754, -0.3617, -0.4317, -0.2423, -0.2808, -0.5169, -0.4137, -0.3872, -0.1331, -0.4886, -0.4363, -0.2686, -0.1924, -0.5098, -0.4219, -0.4041, -0.2787, -0.2455, -0.4364, -0.5455, -0.4673, -0.2277, -0.3485, -0.254, -0.1474, -0.3375, -0.6106, -0.3684, -0.4293, -0.239, -0.1405, -0.305, -0.2467, -0.1787, -0.4312, -0.3193, -0.5969, -0.3834, -0.2818, -0.5659, -0.3299, -0.4527, -0.2159, -0.3316, -0.2328, -0.4259, -0.1407, -0.6995, -0.4018, -0.0972, -0.1468, -0.1629, -0.3582, -0.0846, -0.1975, -0.9033, -0.2938, -0.4298],
                    "r_hi_w": [0.3752, 0.549, 0.4929, 0.1574, 0.8877, 0.4024, 0.2597, 0.4833, 0.7117, 0.2253, 0.5378, 0.1954, 0.4352, 0.3523, 0.1142, 0.3774, 0.6006, 0.3945, 0.496, 0.3358, 0.5985, 0.4167, 0.6015, 0.3224, 0.4032, 0.4321, 0.381, 0.2182, 0.5062, 0.4114, 0.5206, 0.5436, 0.324, 0.6379, 0.453, 0.4247, 0.244, 0.3358, 0.3631, 0.2789, 0.2519, 0.4754, 0.6671, 0.2975, 0.3356, 0.4963, 0.4476, 0.2799, 0.4748, 0.4006, 0.5671, 0.2931, 0.4427, 0.5752, 0.819, 0.3386, 0.1615, 0.4062, 0.3577, 0.6055, 0.2409, 0.2521, 0.473, 0.4564, 0.4683, 0.3405, 0.3533, 0.5624, 0.1584, 0.5058, 0.3369, 0.645, 0.3422, 0.32, 0.5056, 0.5366, 0.3662, 0.3988, 0.1964, 0.5926, 0.6027, 0.2581, 0.5069, 0.1574, 0.5374, 0.4252, 0.6821, 0.3613, 0.7339, 0.2644, 0.2298, 0.6752, 0.5484, 0.6824, 0.4618, 0.489, 0.3338, -0.0619, 0.6981, 0.4318]
                }
            },
            "conclusion": "inconclusive"
        }
    ],
    "methods": [],
    "data": [
        {
            "id": "kin",
            "codebook": {
                "@context": "https://schema.org/",
                "@type": "Dataset",
                "name": "kin",
                "schemaVersion": "Psych-DS 0.1.0",
                "url": "https://osf.io/ewfhs/",
                "variableMeasured": [
                    {
                        "@type": "PropertyValue",
                        "name": "trust_self",
                        "description": "Number of trusting moves towards self-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "trust_other",
                        "description": "Number of trusting moves towards self-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "recip_self",
                        "description": "Number of reciprocating moves towards other-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "recip_other",
                        "description": "Number of reciprocating moves towards other-morphs",
                        "dataType": "int"
                    }
                ]
            },
            "data": {
                "trust_self": [1, 2, 2, 1, 1, 1, 1, 1, 2, 0, 2, 0, 1, 2, 2, 3, 2, 2, 1, 1, 2, 0, 0, 1],
                "trust_other": [1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 2, 1],
                "recip_self": [0, 1, 3, 2, 1, 1, 1, 3, 3, 2, 3, 1, 1, 2, 3, 3, 3, 1, 1, 1, 3, 0, 3, 1],
                "recip_other": [1, 1, 2, 2, 3, 2, 1, 3, 3, 1, 3, 0, 1, 3, 3, 3, 3, 0, 3, 0, 1, 0, 3, 2]
            }
        }
    ],
    "analyses": [
        {
            "id": "trust",
            "code": "    t.test(kin$trust_self, kin$trust_other, paired = TRUE, conf.level = 0.975)",
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": 2.5045,
                "parameter": 23,
                "p.value": 0.0198,
                "conf.int": [0.0213, 0.9787],
                "estimate": 0.5,
                "null.value": 0,
                "stderr": 0.1996,
                "alternative": "two.sided",
                "method": "Paired t-test",
                "data.name": "kin$trust_self and kin$trust_other"
            }
        },
        {
            "id": "recip",
            "code": "    t.test(kin$recip_self, kin$recip_other, paired = TRUE, conf.level = 0.975)",
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": -0.2138,
                "parameter": 23,
                "p.value": 0.8326,
                "conf.int": [-0.5089, 0.4256],
                "estimate": -0.0417,
                "null.value": 0,
                "stderr": 0.1949,
                "alternative": "two.sided",
                "method": "Paired t-test",
                "data.name": "kin$recip_self and kin$recip_other"
            }
        },
        {
            "id": "norm",
            "code": [
                "    {",
                "        ts <- shapiro.test(kin$trust_self)$p.value",
                "        to <- shapiro.test(kin$trust_other)$p.value",
                "        rs <- shapiro.test(kin$recip_self)$p.value",
                "        ro <- shapiro.test(kin$recip_other)$p.value",
                "    }",
                "    list(ts = ts, to = to, rs = rs, ro = ro)"
            ],
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "ts": 0.0039,
                "to": 0.0002,
                "rs": 0.0004,
                "ro": 0.0006
            }
        },
        {
            "id": "trust_wilcox",
            "code": [
                "    wilcox.test(kin$trust_self, kin$trust_other, paired = TRUE, ",
                "        conf.level = 0.975, conf.int = TRUE)"
            ],
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": 86.5,
                "parameter": {},
                "p.value": 0.0259,
                "null.value": 0,
                "alternative": "two.sided",
                "method": "Wilcoxon signed rank test with continuity correction",
                "data.name": "kin$trust_self and kin$trust_other",
                "conf.int": [-0, 1.5001],
                "estimate": 1
            }
        },
        {
            "id": "recip_wilcox",
            "code": [
                "    wilcox.test(kin$recip_self, kin$recip_other, paired = TRUE, ",
                "        conf.level = 0.975, conf.int = TRUE)"
            ],
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": 36,
                "parameter": {},
                "p.value": 0.8366,
                "null.value": 0,
                "alternative": "two.sided",
                "method": "Wilcoxon signed rank test with continuity correction",
                "data.name": "kin$recip_self and kin$recip_other",
                "conf.int": [-1.5, 1],
                "estimate": -0
            }
        }
    ]
}

